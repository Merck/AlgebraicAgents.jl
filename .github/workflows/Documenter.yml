name: Documentation
on:
  push:
    branches:
      - main # update to match your development branch (master, main, dev, trunk, ...)
    tags: '*'
  pull_request:
jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ts-graphviz/setup-graphviz@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.10'
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-docs-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-docs-${{ env.cache-name }}-
            ${{ runner.os }}-docs-
            ${{ runner.os }}-
      - name: Install binary dependencies
        run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      - name: Install Julia dependencies
        run: >
          DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24'
          julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
        run: >
          DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24'
          julia --project=docs --color=yes docs/make.jl